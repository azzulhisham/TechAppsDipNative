#include "dip.h"
using namespace std;


//int main() {
//	cout << "!!!Hello World!!!" << endl; // prints !!!Hello World!!!
//
//	double param1 = 1.1;
//	float param2 = 2.2;
//	string myname;
//
//	cout << param1 / param2 << endl;
//
//	cout << "enter your name : ";
//	cin >> myname;
//	cout << "You entered your name as : " + myname << endl;
//
//	return 0;
//}

const SIZE = 4;

vector<vector<MKL_Complex8>> PaddingArray(vector<vector<MKL_Complex8>> input, int colSize, int rowSize, int winX, int winZ,  bool circ = false) {

    int xMmid = (int)floor(winX / 2.0);
    int yMmid = (int)floor(winZ / 2.0);

    colSize += xMmid;
    rowSize += yMmid;

    vector<vector<MKL_Complex8>> extended = ExtendArray(input, colSize, rowSize);

}

int *ExtendArray(int raw[][SIZE], int col, int row) {

	vector<vector<MKL_Complex8>> expanded = new Complex32[col, row];
    for (int i = 0; i < col; i++)
    {
        for (int j = 0; j < row; j++)
        {
            if (i >= raw.GetLength(0) || j >= raw.GetLength(1))
                continue;

            expanded[i, j] = raw[i, j];
        }
    }
    return expanded;

}
